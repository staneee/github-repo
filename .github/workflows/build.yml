name: "buildx"

on:
  push:
    paths:
      - 'src/**'

env:
  GIT_REPO: ${{ vars.GIT_REPO }}
  TAG: '1'
  BASE_IMAGE_REGISTRY: ${{ vars.BASE_IMAGE_REGISTRY }}
  IMAGE_REGISTRY: ${{ vars.IMAGE_REGISTRY }}
  IMAGE_REGISTRY_USERNAME: ${{ vars.IMAGE_REGISTRY_USERNAME }}
  IMAGE_REGISTRY_PASSWORD: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
  IMAGE_ORG: ${{ vars.IMAGE_ORG }}
  INSTALL_PRIVATE_CA: ${{ vars.INSTALL_PRIVATE_CA }}
  DOTNET_NUGET_CONFIG: ${{ vars.DOTNET_NUGET_CONFIG }}
  NPM_REGISTRY: ${{ vars.NPM_REGISTRY }}
  NPM_NPMRC: ${{ vars.NPM_NPMRC }}

jobs:
  build-vue:
    runs-on: ubuntu-22.04
    steps:
      # checkout source code
      - uses: actions/checkout@v2
      # path filter
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            src:
              - 'src/vue/**'
      # login docker registry
      - name: Login to Docker Registry
        if: steps.changes.outputs.src == 'true'
        uses: docker/login-action@v1
        with:
          registry: ${{env.IMAGE_REGISTRY}}
          username: ${{env.IMAGE_REGISTRY_USERNAME}}
          password: ${{env.IMAGE_REGISTRY_PASSWORD}}
      # build
      - name: build 1
        if: steps.changes.outputs.src == 'true'
        shell: pwsh
        working-directory: ./build
        run: |
          ./clone-target-repo.ps1
      # build
      - name: build 2
        if: steps.changes.outputs.src == 'true'
        shell: pwsh
        working-directory: ./build/repo-code/build
        run: |
          ./build.ps1 -ProjectType "vue" -ProjectName "vue" -ImageName "gitlab-action" `
            -DockerfilePath "./src/vue/Dockerfile"

  build-dotnet:
    runs-on: ubuntu-22.04
    steps:
      # checkout source code
      - uses: actions/checkout@v2
      # path filter
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            src:
              - 'src/dotnet/**'
      # login docker registry
      - name: Login to Docker Registry
        if: steps.changes.outputs.src == 'true'
        uses: docker/login-action@v1
        with:
          registry: ${{env.IMAGE_REGISTRY}}
          username: ${{env.IMAGE_REGISTRY_USERNAME}}
          password: ${{env.IMAGE_REGISTRY_PASSWORD}}
      # build
      - name: build 1
        if: steps.changes.outputs.src == 'true'
        shell: pwsh
        working-directory: ./build
        run: |
          ./clone-target-repo.ps1
      # build
      - name: build 2
        if: steps.changes.outputs.src == 'true'
        shell: pwsh
        working-directory: ./build/repo-code/build
        run: |
          ./build.ps1 -ProjectType "dotnet" -ProjectName "server" -ImageName "gitlab-action" `
            -DockerfilePath "./src/aspnet-core/src/Firebytes.Template.Web.Host/Dockerfile"

  deploy:
    runs-on: ubuntu-22.04
    needs: [ build-dotnet, build-vue ]
    steps:
      # checkout source code
      - uses: actions/checkout@v2
      # build
      - name: build 1
        shell: pwsh
        working-directory: ./build
        run: |
          Write-Host "Deploy!!!!"
